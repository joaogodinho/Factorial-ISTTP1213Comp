public void prints(string s)
public void printi(integer i)
public void println()
public integer readi()

void cruzes(integer x) {
  if x > 50 then
    prints("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX...\n")
  else
    if x > 0 then
      do {
        prints("X")
        --x
      } while x > 0
};

public integer atoi(string s)

public integer entry (integer argc, string *argv, string *envp) {
  integer * tab;
  integer lower
  integer upper
  integer slot
  integer rand
  integer val

  do {
    if argc < 4 then {
      prints("USAGE: histograma lower-limit upper-limit step [random]\n")
      entry := 1
      break;
    }
    lower := atoi(argv[1])
    upper := atoi(argv[2])
    if lower >= upper then {
      prints("invalid argument: lower >= upper\n")
      entry := 1
      break;
    }
    slot := atoi(argv[3])
    if slot <= 0 then {
      prints("invalid argument: step <= 0\n")
      entry := 1
      break;
    }
    val := (upper-lower+1)/slot
    tab # val
    if val > 0 then do { val := val - 1; tab[val] := 0; } while val > 0
    if argc > 4 then {
      integer seed
      rand := atoi(argv[4])
      if rand <= 0 then {
	prints("invalid argument: rand <= 0\n")
	entry := 1
	break;
      }
      seed := 100001
      if rand-- > 0 then do {
	seed := (seed * 125) % 2796203
	val := seed % (upper-lower+1) + lower
	tab[(val-lower)/slot] := tab[(val-lower)/slot] + 1
      } while rand-- > 0
    }
    else {
      val := readi()
      if val >= lower & val <= upper then do {
	tab[(val-lower)/slot] := tab[(val-lower)/slot] + 1
	val := readi()
      } while val >= lower & val <= upper
    }
    val := lower
    if val <= upper then do {
      printi(tab[(val-lower)/slot])
      prints(" de ")
      printi(val)
      prints(" a ")
      printi(val+slot-1)
      prints(": ")
      cruzes(tab[(val-lower)/slot])
      prints("\n")
      val := val + slot
    } while val <= upper
    entry := 0
  } while 0
};
