%{
/* 
 * Instruction selection with postfix.h
 */
#include <stdio.h>
#include <assert.h>
#include <stdlib.h>
#include <string.h>
#include "node.h"
#include "tabid.h"
#include "postfix.h"
#include "y.tab.h"

#ifndef U_
#define U_ "_"
#endif

extern FILE *outfp;
extern char **yynames;

%}
%include "y.tab.h"
%%
entry_point: DECLS(entry_point, declaration)
declaration: DECL(declaration_specifiers, END)
declaration: DECL(declaration_specifiers, init_declarator) 
declaration_specifiers: DECL_SPEC(keywords_spec, type_spec)
init_declarator: END
keywords_spec: PUBLIC
keywords_spec: PUBLIC_CONST
keywords_spec: CONST
keywords_spec: END
type_spec: VINT
type_spec: VSTR
type_spec: VNUMB
type_spec: VOID
%%

void function(char *name, int enter, Node *body) {
	int i;
	extern int trace;
	if(trace) printNode(body, stdout, yynames);
	if (body == 0) { fprintf(outfp, pfEXTRN, name); }
	else {
		fprintf(outfp, pfTEXT pfALIGN pfGLOBL pfLABEL pfENTER, name, pfFUNC, name, enter);
		if (yyselect(body) == 1) { yyerror("No match for syntactic tree."); }
		fprintf(outfp, pfLEAVE pfRET);
		freeNode(body);
	}
}

void program(int enter, Node *body) {
	function("_main", enter, body);
	fprintf(outfp, pfEXTRN pfEXTRN pfEXTRN pfEXTRN, U_"prints", U_"printi", U_"println", U_"readi");
}
